These programs were written for the analysis of TCT measurements for timing.
The expected data format is the one of the TCT+ setup.
When taking data, the waveforms are not averaged, and about 1000-2000 waveforms are usually needed for the time resolution measurments.
The repetition field is used for this, the DAQ was optimized to poll the instruments status (I, V, position, T, ....) every 500 or so waveforms in order to speed up the measurements.
The optical delay line can be used, making two laser pulses to shine on the sensor for each pulse generated by the laser head.  

--> convertTxt
    This program convert the TCT+ output (txt file) into a root file.
    Launching the command without arguments will print out an explanation of the needed arguments.
    The data is stored in a root tree named TCTtree.
    The branches are:
    - npt: number of points in the waveforms
    - trace1[npt]: voltage values in volts of the first trace (usually the sensor under test)
    - time1[npt]: time values in seconds for the first waveform
    - trace2[npt]: voltage values in volts of the second trace (usually the reference photodiode)
    - time2[npt]: time values in seconds for the second waveform (it is the same as time1)
    - set: integer number that is increased when the measurement conditions are changed, used to group waveforms acquired in the same conditions
    - timeStamp: time of the measurement
    - chillerSetT: set temperature of the chiller, in celsius
    - chillerIntern: to be checked
    - chillerExtern: to be checked
    - peltierSetT: set temperature for the Peltier, in celsius
    - pcbT: temperature of the sensor PCB, in celsius
    - copperT: to be checked
    - biasSet: bias set for the measurement, in volts
    - current: current drawn by the sensor during the measurement, in amps
    - biasMeas: to be checked
    - x: position on the x axis, in mm
    - y: position on the y axis, in mm
    - z: position on the z axis, in mm
    - ampliV: voltage given to the amplifier, in volts
    - ampliI: current drawn by the amplifier, in amps
    - rep: repetition iterator
    - event: event counter

    At the moment the definition of the variables "to be checked" is not clear.
    They are saved in the TCT output file, and are propagated in the tree.

    To use the delay line for timing measurements, the option "-tp chNum" can be given to the program.
    chNum is the number of the trace that should be used to determine the time resolution of the detector connected to it, it should be either 1 or 2.
    When this option is used, the waveform of the selected channel is split in two parts of equal length that are then stored in the trace1 and trace2 branches.
    This is important for the analysis program described below, that was written expecting only one pulse per channel.

--> analyzeData
    This program is used to analyze the file output of convertTxt for timing.
    It produced a root file as output.
    Launching the command without arguments will print out an explanation of the needed arguments.
    For each set, a timing study is done, where thresholds are optimized for a CFD and LED algorithm.
    The best threshold combination is then chosen to produce the distribution of time difference contained in the folder timingStudy.
    This folder is a subfolder of the set folder named using set number, bias voltage, position, and temperature.
    The timing study contains all distributions that are relevant for timing.
    Other folders contain plots relative to the variation of certain variables as a function of time and bias voltage.
    To work, the program needs a config file, an example is given.
    In this file, the variables for the cut in x, y, and z should be disregarded and set to 0.
    The following variables of the config file are used to calculate the pulse properties:
    - nbStart1: start time for the calculation of baseline and noise of the first pulse, in seconds
    - nbSop1: stop time for the calculation of baseline and noise of the first pulse, in seconds
    - intStart1: start time that defines the interval where the signal properties are determined, in seconds
    - intStop1: stop time that defines the interval where the signal properties are determined, in seconds
    - polarity1: polarity of the pulse
    The same variables with suffix 2 are referred to the trace2.
    